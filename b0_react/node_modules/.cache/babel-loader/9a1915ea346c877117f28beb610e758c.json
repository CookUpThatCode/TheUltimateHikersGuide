{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matte/Coding/uhg/b0_react/src/components/trailsview/trailsview.jsx\";\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport TrailItem from '../trailItem/trailItem';\nimport './trailsview.css';\n\nclass TrailsView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initiated: false,\n      startIdx: 0\n    };\n\n    this.rightHandler = () => {\n      if (this.state.startIdx !== 10) {\n        this.setState((prevState, prevProps) => {\n          return {\n            startIdx: prevState.startIdx + 5\n          };\n        });\n      }\n    };\n\n    this.leftHandler = () => {\n      if (this.state.startIdx !== 0) {\n        this.setState((prevState, prevProps) => {\n          return {\n            startIdx: prevState.startIdx - 5\n          };\n        });\n      }\n    };\n  }\n\n  render() {\n    let leftArrow = \"outerSection\";\n    let rightArrow = \"outerSection\";\n    if (this.state.startIdx === 0) leftArrow += \" grayedOut\";\n    if (this.state.startIdx === 10) rightArrow += \" grayedOut\";\n\n    if (!this.state.initiated) {\n      const list = /*#__PURE__*/_jsxDEV(Query, {\n        query: BEGINNER_TRAILS,\n        children: ({\n          data,\n          loading,\n          error\n        }) => {\n          if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 39\n          }, this);\n          if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this);\n          let trailsList = data.beginnerTrails.map((trail, idx) => {\n            return /*#__PURE__*/_jsxDEV(TrailItem, {\n              trailID: trail.id,\n              trailName: trail.name,\n              trailProp: trail.prop,\n              trailDistance: trail.distance,\n              trailAltChange: trail.altitudeChange,\n              trailAvgDiff: trail.avgDifficulty,\n              trailAvgEnj: trail.avgEnjoyability\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this);\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailsView\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: leftArrow,\n              onClick: this.leftHandler,\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), trailsList.slice(this.state.startIdx, this.state.startIdx + 5), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: rightArrow,\n              onClick: this.rightHandler,\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    }\n\n    return {\n      list\n    };\n  }\n\n}\n\nconst BEGINNER_TRAILS = gql`\n   {\n      beginnerTrails {\n         id \n         name \n         prop \n         distance \n         altitudeChange\n         avgDifficulty\n         avgEnjoyability\n      }\n   }\n`;\nexport default TrailsView;","map":{"version":3,"sources":["/home/matte/Coding/uhg/b0_react/src/components/trailsview/trailsview.jsx"],"names":["React","Component","Query","gql","TrailItem","TrailsView","state","initiated","startIdx","rightHandler","setState","prevState","prevProps","leftHandler","render","leftArrow","rightArrow","list","BEGINNER_TRAILS","data","loading","error","trailsList","beginnerTrails","map","trail","idx","id","name","prop","distance","altitudeChange","avgDifficulty","avgEnjoyability","slice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport TrailItem from '../trailItem/trailItem';\n\nimport './trailsview.css';\n\nclass TrailsView extends Component {\n   state = {\n      initiated: false,\n      startIdx: 0,\n   }\n\n   rightHandler = () => {\n      if (this.state.startIdx !== 10) {\n         this.setState((prevState, prevProps) => {\n            return {\n               startIdx: prevState.startIdx + 5\n            }\n         })\n      }\n   }\n\n   leftHandler = () => {\n      if (this.state.startIdx !== 0) {\n         this.setState((prevState, prevProps) => {\n            return {\n               startIdx: prevState.startIdx - 5\n            }\n         })\n      }\n   }\n\n   render() {\n      let leftArrow = \"outerSection\";\n      let rightArrow = \"outerSection\";\n      if (this.state.startIdx === 0) leftArrow += \" grayedOut\";\n      if (this.state.startIdx === 10) rightArrow += \" grayedOut\";\n      if (!this.state.initiated) {\n         const list = (\n            <Query query={BEGINNER_TRAILS}>\n               {({data, loading, error}) => {\n                  if (loading) return <div>Loading</div>\n                  if (error) return <div>Error</div>\n\n                  let trailsList = data.beginnerTrails.map((trail, idx) => {\n                     return <TrailItem\n                        key={idx}\n                        trailID={trail.id}\n                        trailName={trail.name}\n                        trailProp={trail.prop}\n                        trailDistance={trail.distance}\n                        trailAltChange={trail.altitudeChange}\n                        trailAvgDiff={trail.avgDifficulty}\n                        trailAvgEnj={trail.avgEnjoyability}\n                     />\n                  })\n\n                  return (\n                     <div className=\"trailsView\">\n                        <div className={leftArrow} onClick={this.leftHandler}>&lt;</div>\n                        {trailsList.slice(this.state.startIdx, this.state.startIdx+5)}\n                        <div className={rightArrow} onClick={this.rightHandler}>&gt;</div>\n                     </div>\n                  )\n               }}\n            </Query>\n         )\n      }\n      return (\n         {list}\n      )\n   }\n}\n\n\nconst BEGINNER_TRAILS = gql`\n   {\n      beginnerTrails {\n         id \n         name \n         prop \n         distance \n         altitudeChange\n         avgDifficulty\n         avgEnjoyability\n      }\n   }\n`\n\nexport default TrailsView;"]},"metadata":{},"sourceType":"module"}