{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/matte/Coding/uhg/b0_react/src/components/searchTrails/searchTrails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nconst SearchTrails = () => {\n  _s();\n\n  const [search2, setSearch] = useState(\"\");\n\n  const handleSubmit = async (event, client) => {\n    event.preventDefault();\n    const res = await client.query({\n      query: SEARCH_TRAILS_QUERY,\n      variables: {\n        search2\n      }\n    });\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ApolloConsumer, {\n    children: client => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => handleSubmit(event, client),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"yolo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchTrails, \"1CbxxtzL8ug0zB9romysdXgX8gg=\");\n\n_c = SearchTrails;\nconst SEARCH_TRAILS_QUERY = gql`\n   query($search: String) {\n      trails(search: $search) {\n         name \n         prop \n         city \n         state\n      }\n   }\n`;\nexport default SearchTrails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchTrails\");","map":{"version":3,"sources":["/home/matte/Coding/uhg/b0_react/src/components/searchTrails/searchTrails.jsx"],"names":["React","Component","useState","ApolloConsumer","gql","SearchTrails","search2","setSearch","handleSubmit","event","client","preventDefault","res","query","SEARCH_TRAILS_QUERY","variables","console","log","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBL,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMM,YAAY,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC3CD,IAAAA,KAAK,CAACE,cAAN;AACA,UAAMC,GAAG,GAAG,MAAMF,MAAM,CAACG,KAAP,CAAa;AAC5BA,MAAAA,KAAK,EAAEC,mBADqB;AAE5BC,MAAAA,SAAS,EAAE;AAAET,QAAAA;AAAF;AAFiB,KAAb,CAAlB;AAIAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACF,GAPD;;AASA,sBACG,QAAC,cAAD;AAAA,cACIF,MAAM,iBACJ;AAAM,MAAA,QAAQ,EAAED,KAAK,IAAID,YAAY,CAACC,KAAD,EAAQC,MAAR,CAArC;AAAA,8BACG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAED,KAAK,IAAIF,SAAS,CAACE,KAAK,CAACS,MAAN,CAAaC,KAAd;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,UADH;AAYF,CAxBD;;GAAMd,Y;;KAAAA,Y;AA0BN,MAAMS,mBAAmB,GAAGV,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAcA,eAAeC,YAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport { ApolloConsumer } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nconst SearchTrails = () => {\n   const [search2, setSearch] = useState(\"\")\n\n   const handleSubmit = async (event, client) => {\n      event.preventDefault();\n      const res = await client.query({\n         query: SEARCH_TRAILS_QUERY,\n         variables: { search2 }\n      })\n      console.log(res);\n   }\n\n   return (\n      <ApolloConsumer>\n         {client => (\n            <form onSubmit={event => handleSubmit(event, client)}>\n               <button type=\"submit\">X</button>\n               <input type=\"text\" onChange={event => setSearch(event.target.value)} />\n               <button type=\"submit\">yolo</button>\n            </form>\n         )}\n\n      </ApolloConsumer>\n   )\n}\n\nconst SEARCH_TRAILS_QUERY = gql`\n   query($search: String) {\n      trails(search: $search) {\n         name \n         prop \n         city \n         state\n      }\n   }\n`\n\n   \n\n\nexport default SearchTrails;"]},"metadata":{},"sourceType":"module"}