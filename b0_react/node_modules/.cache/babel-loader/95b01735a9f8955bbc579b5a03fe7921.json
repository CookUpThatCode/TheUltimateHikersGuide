{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matte/Coding/uhg/b0_react/src/components/trailsview/trailsview.jsx\";\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport TrailItem from '../trailItem/trailItem';\nimport './trailsview.css';\n\nclass TrailsView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // initiated: false,\n      startIdx: 0,\n      list: 0\n    };\n\n    this.rightHandler = () => {\n      if (this.state.startIdx !== 10) {\n        this.setState((prevState, prevProps) => {\n          return {\n            startIdx: prevState.startIdx + 5\n          };\n        });\n      }\n    };\n\n    this.leftHandler = () => {\n      if (this.state.startIdx !== 0) {\n        this.setState((prevState, prevProps) => {\n          return {\n            startIdx: prevState.startIdx - 5\n          };\n        });\n      }\n    };\n  }\n\n  render() {\n    let leftArrow = \"outerSection\";\n    let rightArrow = \"outerSection\";\n    if (this.state.startIdx === 0) leftArrow += \" grayedOut\";\n    if (this.state.startIdx === 10) rightArrow += \" grayedOut\";\n\n    const stuff = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this); // const qu = (\n    //    <Query query={BEGINNER_TRAILS}>\n    //       {({data, loading, error}) => {\n    //          if (loading) return <div>Loading</div>\n    //          if (error) return <div>Error</div>\n    //          if (!this.state.list) this.setState({list: data.beginnerTrails});\n    //          let trailsList = data.beginnerTrails.map((trail, idx) => {\n    //             return <TrailItem\n    //                key={idx}\n    //                trailID={trail.id}\n    //                trailName={trail.name}\n    //                trailProp={trail.prop}\n    //                trailDistance={trail.distance}\n    //                trailAltChange={trail.altitudeChange}\n    //                trailAvgDiff={trail.avgDifficulty}\n    //                trailAvgEnj={trail.avgEnjoyability}\n    //             />\n    //          })\n    //          return (\n    //             <div className=\"trailsView\">\n    //                <div className={leftArrow} onClick={this.leftHandler}>&lt;</div>\n    //                {trailsList.slice(this.state.startIdx, this.state.startIdx+5)}\n    //                <div className={rightArrow} onClick={this.rightHandler}>&gt;</div>\n    //                {/* {!this.state.initiated ? stuff : <div>No Bueno</div>} */}\n    //             </div>\n    //          )\n    //       }}\n    //    </Query>\n    // )\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.state.list ? qu : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"testing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst BEGINNER_TRAILS = gql`\n   {\n      beginnerTrails {\n         id \n         name \n         prop \n         distance \n         altitudeChange\n         avgDifficulty\n         avgEnjoyability\n      }\n   }\n`;\nexport default TrailsView;","map":{"version":3,"sources":["/home/matte/Coding/uhg/b0_react/src/components/trailsview/trailsview.jsx"],"names":["React","Component","Query","gql","TrailItem","TrailsView","state","startIdx","list","rightHandler","setState","prevState","prevProps","leftHandler","render","leftArrow","rightArrow","stuff","qu","BEGINNER_TRAILS"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACL;AACAC,MAAAA,QAAQ,EAAE,CAFL;AAGLC,MAAAA,IAAI,EAAE;AAHD,KADwB;;AAAA,SAOhCC,YAPgC,GAOjB,MAAM;AAClB,UAAI,KAAKH,KAAL,CAAWC,QAAX,KAAwB,EAA5B,EAAgC;AAC7B,aAAKG,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrC,iBAAO;AACJL,YAAAA,QAAQ,EAAEI,SAAS,CAACJ,QAAV,GAAqB;AAD3B,WAAP;AAGF,SAJD;AAKF;AACH,KAf+B;;AAAA,SAiBhCM,WAjBgC,GAiBlB,MAAM;AACjB,UAAI,KAAKP,KAAL,CAAWC,QAAX,KAAwB,CAA5B,EAA+B;AAC5B,aAAKG,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrC,iBAAO;AACJL,YAAAA,QAAQ,EAAEI,SAAS,CAACJ,QAAV,GAAqB;AAD3B,WAAP;AAGF,SAJD;AAKF;AACH,KAzB+B;AAAA;;AA2BhCO,EAAAA,MAAM,GAAG;AACN,QAAIC,SAAS,GAAG,cAAhB;AACA,QAAIC,UAAU,GAAG,cAAjB;AACA,QAAI,KAAKV,KAAL,CAAWC,QAAX,KAAwB,CAA5B,EAA+BQ,SAAS,IAAI,YAAb;AAC/B,QAAI,KAAKT,KAAL,CAAWC,QAAX,KAAwB,EAA5B,EAAgCS,UAAU,IAAI,YAAd;;AAChC,UAAMC,KAAK,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,CALM,CAQN;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,wBACG;AAAA,gBACC,CAAC,KAAKX,KAAL,CAAWE,IAAZ,GACEU,EADF,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA,YADH;AAOF;;AA1E+B;;AA8EnC,MAAMC,eAAe,GAAGhB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport TrailItem from '../trailItem/trailItem';\n\nimport './trailsview.css';\n\nclass TrailsView extends Component {\n   state = {\n      // initiated: false,\n      startIdx: 0,\n      list: 0\n   }\n\n   rightHandler = () => {\n      if (this.state.startIdx !== 10) {\n         this.setState((prevState, prevProps) => {\n            return {\n               startIdx: prevState.startIdx + 5\n            }\n         })\n      }\n   }\n\n   leftHandler = () => {\n      if (this.state.startIdx !== 0) {\n         this.setState((prevState, prevProps) => {\n            return {\n               startIdx: prevState.startIdx - 5\n            }\n         })\n      }\n   }\n\n   render() {\n      let leftArrow = \"outerSection\";\n      let rightArrow = \"outerSection\";\n      if (this.state.startIdx === 0) leftArrow += \" grayedOut\";\n      if (this.state.startIdx === 10) rightArrow += \" grayedOut\";\n      const stuff = (\n         <div>Hello</div>\n      )\n      // const qu = (\n      //    <Query query={BEGINNER_TRAILS}>\n      //       {({data, loading, error}) => {\n      //          if (loading) return <div>Loading</div>\n      //          if (error) return <div>Error</div>\n\n      //          if (!this.state.list) this.setState({list: data.beginnerTrails});\n\n      //          let trailsList = data.beginnerTrails.map((trail, idx) => {\n      //             return <TrailItem\n      //                key={idx}\n      //                trailID={trail.id}\n      //                trailName={trail.name}\n      //                trailProp={trail.prop}\n      //                trailDistance={trail.distance}\n      //                trailAltChange={trail.altitudeChange}\n      //                trailAvgDiff={trail.avgDifficulty}\n      //                trailAvgEnj={trail.avgEnjoyability}\n      //             />\n      //          })\n\n      //          return (\n      //             <div className=\"trailsView\">\n      //                <div className={leftArrow} onClick={this.leftHandler}>&lt;</div>\n      //                {trailsList.slice(this.state.startIdx, this.state.startIdx+5)}\n      //                <div className={rightArrow} onClick={this.rightHandler}>&gt;</div>\n      //                {/* {!this.state.initiated ? stuff : <div>No Bueno</div>} */}\n      //             </div>\n      //          )\n      //       }}\n      //    </Query>\n      // )\n      return (\n         <div>\n         {!this.state.list \n         ?  qu \n         :  <div>testing</div>\n         }</div>\n      )\n   }\n}\n\n\nconst BEGINNER_TRAILS = gql`\n   {\n      beginnerTrails {\n         id \n         name \n         prop \n         distance \n         altitudeChange\n         avgDifficulty\n         avgEnjoyability\n      }\n   }\n`\n\nexport default TrailsView;"]},"metadata":{},"sourceType":"module"}