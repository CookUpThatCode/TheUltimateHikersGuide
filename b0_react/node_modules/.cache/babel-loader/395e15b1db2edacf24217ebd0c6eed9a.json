{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matte/Coding/uhg/b0_react/src/pages/profile/profile.jsx\";\nimport React, { useState } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport './profile.css';\n\nconst Profile = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Query, {\n      query: HIKER_QUERY,\n      children: ({\n        data,\n        loading,\n        error\n      }) => {\n        if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 34\n        }, this);\n        if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 36\n        }, this);\n        console.log(data);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Logged In. ID: \", data.hiker.id, \" username: \", data.hiker.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Profile;\nconst HIKER_QUERY = gql`\n   query {\n      hiker {\n         id \n         user {\n            username\n         }\n      }\n   }\n`;\nexport default Profile; // const IS_LOGGED_IN_QUERY = gql`\n//    {\n//       isLoggedIn @client\n//    }\n// `\n// const HIKER_QUERY = gql`\n//    query ($hikerID: Int!) {\n//       hiker(hikerID: $hikerID) {\n//          id \n//          user {\n//             username\n//          }\n//       }\n//    }\n// `\n\n{\n  /* <Query query={HIKER_QUERY} variables={{hikerID:hikerID}}>\n    {({data, loading, error}) => {\n       if (error) return <div>Error</div>\n       if (loading) return <div></div>\n        console.log(data)\n        return (\n          <div>Logged In. ID: {data.hiker.id} username: {data.hiker.user.username}</div>\n       )\n    }}\n  </Query> */\n}\n{\n  /* <Query query={IS_LOGGED_IN_QUERY}>\n    {({data}) => data.isLoggedIn ? <div>You're logged in</div> : <div>Not logged in</div>}\n  </Query> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/matte/Coding/uhg/b0_react/src/pages/profile/profile.jsx"],"names":["React","useState","Query","gql","Profile","HIKER_QUERY","data","loading","error","console","log","hiker","id","user","username"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAO,eAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEnB,sBACG;AAAA,2BAEG,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,WAAd;AAAA,gBACI,CAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA,OAAP;AAAgBC,QAAAA;AAAhB,OAAD,KAA4B;AAC1B,YAAIA,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,YAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEbE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,4BACG;AAAA,wCAAqBA,IAAI,CAACK,KAAL,CAAWC,EAAhC,iBAA+CN,IAAI,CAACK,KAAL,CAAWE,IAAX,CAAgBC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AAGF;AAVJ;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,UADH;AAmBF,CArBD;;KAAMV,O;AAuBN,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAeC,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEY;AAEZ;AAAC;AACD;AACA;AAAY","sourcesContent":["import React, { useState } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport './profile.css';\n\nconst Profile = () => {\n\n   return (\n      <div>\n\n         <Query query={HIKER_QUERY}>\n            {({data, loading, error}) => {\n               if (error) return <div>Error</div>\n               if (loading) return <div></div>\n\n               console.log(data)\n\n               return (\n                  <div>Logged In. ID: {data.hiker.id} username: {data.hiker.user.username}</div>\n               )\n            }}\n         </Query>\n\n      </div>\n      \n   )\n}\n\nconst HIKER_QUERY = gql`\n   query {\n      hiker {\n         id \n         user {\n            username\n         }\n      }\n   }\n`\n\nexport default Profile;\n\n// const IS_LOGGED_IN_QUERY = gql`\n//    {\n//       isLoggedIn @client\n//    }\n// `\n\n// const HIKER_QUERY = gql`\n//    query ($hikerID: Int!) {\n//       hiker(hikerID: $hikerID) {\n//          id \n//          user {\n//             username\n//          }\n//       }\n//    }\n// `\n\n{/* <Query query={HIKER_QUERY} variables={{hikerID:hikerID}}>\n   {({data, loading, error}) => {\n      if (error) return <div>Error</div>\n      if (loading) return <div></div>\n\n      console.log(data)\n\n      return (\n         <div>Logged In. ID: {data.hiker.id} username: {data.hiker.user.username}</div>\n      )\n   }}\n</Query> */}\n\n{/* <Query query={IS_LOGGED_IN_QUERY}>\n   {({data}) => data.isLoggedIn ? <div>You're logged in</div> : <div>Not logged in</div>}\n</Query> */}"]},"metadata":{},"sourceType":"module"}