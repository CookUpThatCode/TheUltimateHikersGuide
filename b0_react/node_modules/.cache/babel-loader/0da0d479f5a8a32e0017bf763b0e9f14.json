{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/matte/Coding/uhg/b0_react/src/components/checkInOut/checkInOut.jsx\";\nimport React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport './checkInOut.css';\n\nconst CheckInOut = props => {\n  const {\n    trailID,\n    checkInEnabled,\n    checkOutEnabled,\n    checkInClass,\n    checkOutClass,\n    checkStatusText1,\n    checkStatusText2\n  } = props;\n\n  const checkInHandler = async checkIn => {\n    if (checkInEnabled) {\n      const res = await checkIn();\n      console.log(res);\n    }\n  };\n\n  const checkOutHandler = async checkOut => {\n    if (checkOutEnabled) {\n      const res = await checkOut();\n      console.log(res);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: CHECK_IN_MUTATION,\n      variables: {\n        trailID: trailID\n      },\n      children: (checkIn, {\n        loading,\n        error\n      }) => {\n        if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 34\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: checkInClass,\n          onClick: () => checkInHandler(checkIn),\n          children: \"CHECK IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: CHECK_OUT_MUTATION,\n      variables: {\n        trailID: trailID\n      },\n      children: (checkOut, {\n        loading,\n        error\n      }) => {\n        if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"CheckOutError\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: checkOutClass,\n          onClick: () => checkOutHandler(checkOut),\n          children: \"CHECK OUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_c = CheckInOut;\nconst CHECK_IN_MUTATION = gql`\n   mutation ($trailID: Int!) {\n      checkIn(trailID: $trailID) {\n         hike {\n            id\n         }\n      }\n   }\n`;\nconst CHECK_OUT_MUTATION = gql`\n   mutation ($trailID: Int!) {\n      checkOut(trailID: $trailID) {\n         hike {\n            id\n         }\n      }\n   }\n`;\nexport default CheckInOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckInOut\");","map":{"version":3,"sources":["/home/matte/Coding/uhg/b0_react/src/components/checkInOut/checkInOut.jsx"],"names":["React","useState","Mutation","gql","CheckInOut","props","trailID","checkInEnabled","checkOutEnabled","checkInClass","checkOutClass","checkStatusText1","checkStatusText2","checkInHandler","checkIn","res","console","log","checkOutHandler","checkOut","CHECK_IN_MUTATION","loading","error","CHECK_OUT_MUTATION"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,cAAX;AAA2BC,IAAAA,eAA3B;AAA4CC,IAAAA,YAA5C;AAA0DC,IAAAA,aAA1D;AAAyEC,IAAAA,gBAAzE;AAA2FC,IAAAA;AAA3F,MAAgHP,KAAtH;;AAEA,QAAMQ,cAAc,GAAG,MAAOC,OAAP,IAAmB;AACvC,QAAIP,cAAJ,EAAoB;AACjB,YAAMQ,GAAG,GAAG,MAAMD,OAAO,EAAzB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACF;AACH,GALD;;AAOA,QAAMG,eAAe,GAAG,MAAOC,QAAP,IAAoB;AACzC,QAAIX,eAAJ,EAAqB;AAClB,YAAMO,GAAG,GAAG,MAAMI,QAAQ,EAA1B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACF;AACH,GALD;;AAOA,sBACG;AAAA,4BACG,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEK,iBAApB;AAAuC,MAAA,SAAS,EAAE;AAACd,QAAAA,OAAO,EAAEA;AAAV,OAAlD;AAAA,gBACI,CAACQ,OAAD,EAAU;AAAEO,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAV,KAAiC;AAC/B,YAAIA,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,4BACG;AAAK,UAAA,SAAS,EAAEb,YAAhB;AAA8B,UAAA,OAAO,EAAE,MAAMI,cAAc,CAACC,OAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AAGF;AANJ;AAAA;AAAA;AAAA;AAAA,YADH,eASG,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAES,kBAApB;AAAwC,MAAA,SAAS,EAAE;AAACjB,QAAAA,OAAO,EAAEA;AAAV,OAAnD;AAAA,gBACI,CAACa,QAAD,EAAW;AAAEE,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAX,KAAkC;AAChC,YAAIA,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,4BACG;AAAK,UAAA,SAAS,EAAEZ,aAAhB;AAA+B,UAAA,OAAO,EAAE,MAAMQ,eAAe,CAACC,QAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AAGF;AANJ;AAAA;AAAA;AAAA;AAAA,YATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAoBF,CArCD;;KAAMf,U;AAuCN,MAAMgB,iBAAiB,GAAGjB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMoB,kBAAkB,GAAGpB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAeC,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport './checkInOut.css';\n\nconst CheckInOut = (props) => {\n   const { trailID, checkInEnabled, checkOutEnabled, checkInClass, checkOutClass, checkStatusText1, checkStatusText2 } = props;\n\n   const checkInHandler = async (checkIn) => {\n      if (checkInEnabled) {\n         const res = await checkIn();\n         console.log(res);\n      }\n   } \n\n   const checkOutHandler = async (checkOut) => {\n      if (checkOutEnabled) {\n         const res = await checkOut();\n         console.log(res);\n      }\n   }\n\n   return (\n      <div>\n         <Mutation mutation={CHECK_IN_MUTATION} variables={{trailID: trailID}}>\n            {(checkIn, { loading, error }) => {\n               if (error) return <div>Error</div>\n               return (\n                  <div className={checkInClass} onClick={() => checkInHandler(checkIn)}>CHECK IN</div>\n               )\n            }}\n         </Mutation>\n         <Mutation mutation={CHECK_OUT_MUTATION} variables={{trailID: trailID}}>\n            {(checkOut, { loading, error }) => {\n               if (error) return <div>CheckOutError</div>\n               return (\n                  <div className={checkOutClass} onClick={() => checkOutHandler(checkOut)}>CHECK OUT</div>\n               )\n            }}\n         </Mutation>\n      </div>\n   )\n}\n\nconst CHECK_IN_MUTATION = gql`\n   mutation ($trailID: Int!) {\n      checkIn(trailID: $trailID) {\n         hike {\n            id\n         }\n      }\n   }\n`\n\nconst CHECK_OUT_MUTATION = gql`\n   mutation ($trailID: Int!) {\n      checkOut(trailID: $trailID) {\n         hike {\n            id\n         }\n      }\n   }\n`\n\nexport default CheckInOut;"]},"metadata":{},"sourceType":"module"}