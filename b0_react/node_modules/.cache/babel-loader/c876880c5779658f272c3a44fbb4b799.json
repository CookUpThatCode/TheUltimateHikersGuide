{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/matte/Coding/uhg/b0_react/src/components/login/login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport './login.css';\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [skillLevel, setSkillLevel] = useState(1);\n\n  const handleSubmit = async (event, createHiker) => {\n    event.preventDefault();\n    const res = await createHiker();\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Mutation, {\n    mutation: CREATE_USER_MUTATION,\n    variables: {\n      username: username,\n      password: password,\n      email: email,\n      skillLevel: skillLevel\n    },\n    children: (createHiker, {\n      loading,\n      error\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => handleSubmit(event, createHiker),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"email\",\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Login, \"VP60kIsOyCYDJJDmzhNisHYceaE=\");\n\n_c = Login;\nconst CREATE_USER_MUTATION = gql`\n   mutation ($username:String!, $password:String!, $email:String!, $skillLevel:Int!) {\n      createHiker(username:$username, password:$password, email:$email, skillLevel:$skillLevel) {\n         hiker {\n            user {\n               id\n            }\n         }\n      }\n   }\n`;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/matte/Coding/uhg/b0_react/src/components/login/login.jsx"],"names":["React","useState","Mutation","gql","Login","username","setUsername","password","setPassword","email","setEmail","skillLevel","setSkillLevel","handleSubmit","event","createHiker","preventDefault","res","console","log","CREATE_USER_MUTATION","loading","error","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMY,YAAY,GAAG,OAAOC,KAAP,EAAcC,WAAd,KAA8B;AAChDD,IAAAA,KAAK,CAACE,cAAN;AACA,UAAMC,GAAG,GAAG,MAAMF,WAAW,EAA7B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACF,GAJD;;AAMA,sBACG,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEG,oBAApB;AACG,IAAA,SAAS,EAAE;AAAEf,MAAAA,QAAQ,EAACA,QAAX;AAAqBE,MAAAA,QAAQ,EAACA,QAA9B;AAAwCE,MAAAA,KAAK,EAACA,KAA9C;AAAqDE,MAAAA,UAAU,EAACA;AAAhE,KADd;AAAA,cAGI,CAACI,WAAD,EAAc;AAAEM,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAd,KAAqC;AAEnC,0BACG;AAAM,QAAA,QAAQ,EAAGR,KAAD,IAAWD,YAAY,CAACC,KAAD,EAAQC,WAAR,CAAvC;AAAA,gCACG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,QAAQ,EAAED,KAAK,IAAIR,WAAW,CAACQ,KAAK,CAACS,MAAN,CAAaC,KAAd;AAAxE;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,QAAQ,EAAEV,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACS,MAAN,CAAaC,KAAd;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,QAAQ,EAAEV,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACS,MAAN,CAAaC,KAAd;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAHH,eAIG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAJH,eAKG;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AASF;AAdJ;AAAA;AAAA;AAAA;AAAA,UADH;AAkBF,CA9BD;;GAAMpB,K;;KAAAA,K;AAgCN,MAAMgB,oBAAoB,GAAGjB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,eAAeC,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Mutation } from 'react-apollo'\nimport { gql } from 'apollo-boost';\n\nimport './login.css';\n\nconst Login = () => {\n   const [username, setUsername] = useState(\"\");\n   const [password, setPassword] = useState(\"\");\n   const [email, setEmail] = useState(\"\");\n   const [skillLevel, setSkillLevel] = useState(1);\n\n   const handleSubmit = async (event, createHiker) => {\n      event.preventDefault();\n      const res = await createHiker();\n      console.log(res);\n   }\n\n   return (\n      <Mutation mutation={CREATE_USER_MUTATION}\n         variables={{ username:username, password:password, email:email, skillLevel:skillLevel}}\n      >\n         {(createHiker, { loading, error }) => {\n\n            return (\n               <form onSubmit={(event) => handleSubmit(event, createHiker)}>\n                  <input type=\"text\" placeholder=\"username\" onChange={event => setUsername(event.target.value)}/>\n                  <input type=\"text\" placeholder=\"password\" onChange={event => setPassword(event.target.value)}/>\n                  <input type=\"text\" placeholder=\"email\" onChange={event => setEmail(event.target.value)}/>\n                  <input type=\"text\" value=\"1\" />\n                  <button type=\"submit\">Login</button>\n               </form>\n            )\n         }}\n      </Mutation>\n   )\n}\n\nconst CREATE_USER_MUTATION = gql`\n   mutation ($username:String!, $password:String!, $email:String!, $skillLevel:Int!) {\n      createHiker(username:$username, password:$password, email:$email, skillLevel:$skillLevel) {\n         hiker {\n            user {\n               id\n            }\n         }\n      }\n   }\n`\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}