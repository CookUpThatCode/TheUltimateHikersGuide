{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/matte/Coding/uhg/b0_react/src/pages/traildetail/traildetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Header from '../../components/header/header';\nimport SearchTrails from '../../components/searchTrails/searchTrails';\nimport TrailSearchResultsList from '../../components/trailSearchResultsList/trailSearchResultsList';\nimport './traildetail.css';\n\nconst TrailDetail = props => {\n  _s();\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [resultIdx, setResultIdx] = useState(0);\n\n  const nextResultsHandler = () => {\n    if (resultIdx + 8 < searchResults.length) {\n      setResultIdx(resultIdx + 8);\n    }\n  };\n\n  const prevResultsHandler = () => {\n    if (resultIdx - 8 >= 0) {\n      setResultIdx(resultIdx - 8);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trailDetailPg\",\n    children: /*#__PURE__*/_jsxDEV(SearchTrails, {\n      setSearchResults: setSearchResults,\n      setResultIdx: setResultIdx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TrailDetail, \"Z588g4RpSn+MMqPOWzx917JZCHU=\");\n\n_c = TrailDetail;\nconst TRAIL_DETAIL_QUERY = gql`\n   query ($trailID: Int!) {\n      trailDetails(trailID: $trailID) {\n         name \n         prop \n         city\n         state\n         description\n         isOpen\n         altitudeChange\n         distance\n         fee\n         image\n         suggestedEquipment {\n            equipmentTypeID {\n               equType\n            }\n         }\n         tags {\n            tag\n         }\n         avgDifficulty \n         avgEnjoyability\n         image\n      }\n   }\n`;\nexport default TrailDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrailDetail\");","map":{"version":3,"sources":["/home/matte/Coding/uhg/b0_react/src/pages/traildetail/traildetail.jsx"],"names":["React","useState","Query","gql","Header","SearchTrails","TrailSearchResultsList","TrailDetail","props","searchResults","setSearchResults","resultIdx","setResultIdx","nextResultsHandler","length","prevResultsHandler","TRAIL_DETAIL_QUERY"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,sBAAP,MAAmC,gEAAnC;AAEA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMY,kBAAkB,GAAG,MAAM;AAC9B,QAAIF,SAAS,GAAC,CAAV,GAAcF,aAAa,CAACK,MAAhC,EAAwC;AACrCF,MAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AACF;AACH,GAJD;;AAMA,QAAMI,kBAAkB,GAAG,MAAM;AAC9B,QAAIJ,SAAS,GAAC,CAAV,IAAe,CAAnB,EAAsB;AACnBC,MAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AACF;AACH,GAJD;;AAMA,sBACG;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BA8BG,QAAC,YAAD;AAAc,MAAA,gBAAgB,EAAED,gBAAhC;AAAkD,MAAA,YAAY,EAAEE;AAAhE;AAAA;AAAA;AAAA;AAAA;AA9BH;AAAA;AAAA;AAAA;AAAA,UADH;AA4CF,CA5DD;;GAAML,W;;KAAAA,W;AA8DN,MAAMS,kBAAkB,GAAGb,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;AA4BA,eAAeI,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport Header from '../../components/header/header';\nimport SearchTrails from '../../components/searchTrails/searchTrails';\nimport TrailSearchResultsList from '../../components/trailSearchResultsList/trailSearchResultsList';\n\nimport './traildetail.css';\n\nconst TrailDetail = (props) => {\n   const [searchResults, setSearchResults] = useState([])\n   const [resultIdx, setResultIdx] = useState(0);\n\n   const nextResultsHandler = () => {\n      if (resultIdx+8 < searchResults.length) {\n         setResultIdx(resultIdx+8);\n      }\n   }\n\n   const prevResultsHandler = () => {\n      if (resultIdx-8 >= 0) {\n         setResultIdx(resultIdx-8);\n      }\n   }\n\n   return (\n      <div className=\"trailDetailPg\">\n         {/* <Header currentPg=\"home\" />\n         <Query query={TRAIL_DETAIL_QUERY} variables={{trailID:props.match.params.id}}>\n            {({data, loading, error}) => {\n               if (loading) return <div></div>\n               if (error) return <div>Error</div>\n\n               console.log(data)\n\n               return (\n                  <div>\n                     <div className=\"topDetailsContainer\">\n                        <div className=\"namePropBox\">\n                           <div className=\"nmPropLn1\">{data.trailDetails.name}</div>\n                           <div className=\"nmPropLn2\">{data.trailDetails.prop}</div>\n                        </div>\n                        <div className=\"labelsBox\">\n                           <div className=\"labelItem\">Status:</div>\n                           <div className=\"labelItem\">Fee:</div>\n                        </div>\n                        <div className=\"openFeeBox\">\n                           <div className=\"openFeeItem\">{data.trailDetails.isOpen ? 'OPEN' : 'CLOSED'}</div>\n                           <div className=\"openFeeItem\">{data.trailDetails.fee===0 ? 'FREE' : `$${data.trailDetails.fee.toFixed(2)}`}</div>\n                        </div>\n                        <div className=\"topDetailsSpace\"></div>\n                     </div>\n                  </div>\n               )\n            }}\n         </Query> */}\n         <SearchTrails setSearchResults={setSearchResults} setResultIdx={setResultIdx} />\n         {/* {searchResults.length > 0 && <TrailSearchResultsList results={searchResults.slice(resultIdx, resultIdx+8)} \n            nextResults={nextResultsHandler} prevResults={prevResultsHandler} resultIdx={resultIdx} numResults={searchResults.length} \n         />} */}\n\n\n      </div>\n\n\n\n\n      \n   )\n}\n\nconst TRAIL_DETAIL_QUERY = gql`\n   query ($trailID: Int!) {\n      trailDetails(trailID: $trailID) {\n         name \n         prop \n         city\n         state\n         description\n         isOpen\n         altitudeChange\n         distance\n         fee\n         image\n         suggestedEquipment {\n            equipmentTypeID {\n               equType\n            }\n         }\n         tags {\n            tag\n         }\n         avgDifficulty \n         avgEnjoyability\n         image\n      }\n   }\n`\n\nexport default TrailDetail;"]},"metadata":{},"sourceType":"module"}